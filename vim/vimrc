" general settings "
set nocompatible
filetype plugin indent on
set backspace=indent,eol,start
set autoread
set hidden
set nostartofline
set encoding=utf-8
set noswapfile
"set lazyredraw (breaks the statusline at startup)
set ttyfast
set nomodeline
set path+=**

" indentation and wrapping "
set shiftwidth=4
set tabstop=4
set autoindent
set smartindent
set wrap
set linebreak
set breakindent

" better searching "
set hlsearch
set incsearch
set smartcase
set ignorecase

" UI "
set number
set laststatus=2
set wildmenu
set showcmd
set noshowmode

" file browsing "
let g:netrw_banner=0
let g:netrw_liststyle=3

" mappings "
map Y y$
map 0 ^
nnoremap <C-i> :noh<CR>
nnoremap <C-h> <C-W>h
nnoremap <C-j> <C-W>j
nnoremap <C-k> <C-W>k
nnoremap <C-l> <C-W>l
inoremap {<CR> {<CR>}<Esc>O
inoremap [<CR> [<CR>]<Esc>O
inoremap (<CR> (<CR>)<Esc>O
inoremap <C-f> <C-x><C-f>

" color theme "
if !exists("g:syntax_on")
	syntax enable
endif
set termguicolors
colorscheme yep

" status line colors "
hi User1 ctermfg=black ctermbg=red guifg=#0F1419 guibg=#FC6A67
hi User3 ctermfg=black ctermbg=blue guifg=#0F1419 guibg=#FC8F67
hi User4 ctermfg=black ctermbg=yellow guifg=#0F1419 guibg=#FFD866
hi User7 ctermfg=black ctermbg=yellow cterm=bold guifg=#0F1419 guibg=#FFD866 gui=bold

" helper functions for the statusline "
function! BranchName()
	let l:branchname = system("git rev-parse --abbrev-ref HEAD 2> /dev/null | tr -d '\n'")
	return strlen(l:branchname) > 0 ? '  '.l:branchname.' ' : ''
endfunction

let g:mode_map = {'n': '  NORMAL ', 'i': '  INSERT ', 'R': '  REPLACE ', 'v': '  VISUAL ', 'V': '  V-LINE ', "\<C-v>": '  V-BLOCK ','c': '  COMMAND ', 's': '  SELECT ', 'S': '  S-LINE ', "\<C-s>": '  S-BLOCK ', 't': '  TERMINAL '}
function! FullMode(cur)
	return g:mode_map[a:cur]
endfunction

function! FileType()
	return strlen(&ft) ? '  '.&ft.' ' : '  text '
endfunction

function! Readonly()
	return (&readonly || !&modifiable) ? ' [] ' : ' '
endfunction

function Modified()
	return &modified ? '[+]' : ''
endfunction

function! StatusLine(is_active)
	return a:is_active ? "%7*%{FullMode(mode())}%1*%{BranchName()}%3*\ %F%{Modified()}%{Readonly()}%#StatusLine#%=%1*%{FileType()}%4*\ c:%c\ %LL\ " : "%#StatusLine#%{BranchName()}\ %F%{Modified()}%{Readonly()}%=%{FileType()}\ c:%c\ %LL\ "
endfunction

augroup statusline_setup
	au!
	autocmd WinEnter,BufEnter * setlocal statusline=%!StatusLine(1)
	autocmd WinLeave * setlocal statusline=%!StatusLine(0)
augroup end
